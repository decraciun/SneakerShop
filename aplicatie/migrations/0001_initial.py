# Generated by Django 5.1.1 on 2025-01-15 18:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Furnizor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('numar_telefon', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume', models.CharField(max_length=100, unique=True)),
                ('descriere', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Promotie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume', models.CharField(max_length=100)),
                ('data_inceput', models.DateField()),
                ('data_sfarsit', models.DateField()),
                ('procentaj', models.DecimalField(decimal_places=2, max_digits=4)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('numar_telefon', models.CharField(blank=True, max_length=15, null=True)),
                ('adresa', models.TextField(blank=True, null=True)),
                ('data_nasterii', models.DateField(blank=True, null=True)),
                ('poza_profil', models.ImageField(blank=True, null=True, upload_to='poze_profil/')),
                ('newsletter', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Incaltaminte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume', models.CharField(max_length=100)),
                ('pret', models.DecimalField(decimal_places=2, max_digits=7)),
                ('culoare', models.CharField(max_length=15)),
                ('descriere', models.TextField(blank=True)),
                ('categorie', models.CharField(choices=[('sport', 'Sport'), ('casual', 'Casual'), ('ghete', 'Ghete')], max_length=15)),
                ('id_furnizor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplicatie.furnizor')),
                ('id_marca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplicatie.marca')),
                ('id_promotie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='aplicatie.promotie')),
            ],
        ),
        migrations.CreateModel(
            name='Imagine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagine', models.ImageField(upload_to='imagini/')),
                ('id_incaltaminte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplicatie.incaltaminte')),
            ],
        ),
        migrations.CreateModel(
            name='Marime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marime', models.IntegerField(choices=[(36, '36'), (37, '37'), (38, '38'), (39, '39'), (40, '40'), (41, '41'), (42, '42'), (43, '43'), (44, '44'), (45, '45'), (46, '46')])),
                ('numar_bucati', models.IntegerField(default=0, null=True)),
                ('id_incaltaminte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplicatie.incaltaminte')),
            ],
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume', models.CharField(max_length=100)),
                ('componenta', models.CharField(choices=[('exterior', 'Exterior'), ('interior', 'Interior'), ('talpa', 'Talpa')], default='', max_length=20)),
                ('id_incaltaminte', models.ManyToManyField(to='aplicatie.incaltaminte')),
            ],
        ),
        migrations.CreateModel(
            name='Recenzie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stele', models.IntegerField(choices=[(1, 'O stea'), (2, '2 stele'), (3, '3 stele'), (4, '4 stele'), (5, '5 stele')])),
                ('comentariu', models.TextField(blank=True)),
                ('data_recenzie', models.DateField(auto_now_add=True)),
                ('id_incaltaminte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplicatie.incaltaminte')),
            ],
        ),
    ]
